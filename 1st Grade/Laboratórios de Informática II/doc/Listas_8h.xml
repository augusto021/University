<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Listas_8h" kind="file" language="C++">
    <compoundname>Listas.h</compoundname>
    <includes refid="Dados_8h" local="yes">Dados.h</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="Logicadoprograma_8h" local="yes">projeto/Logicadoprograma.h</includedby>
    <includedby refid="Interface_8c" local="yes">projeto/Interface.c</includedby>
    <includedby refid="Listas_8c" local="yes">projeto/Listas.c</includedby>
    <includedby refid="Logicadoprograma_8c" local="yes">projeto/Logicadoprograma.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>Dados.h</label>
        <link refid="Dados_8h"/>
      </node>
      <node id="1">
        <label>projeto/Listas.h</label>
        <link refid="Listas_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>projeto/Logicadoprograma.h</label>
        <link refid="Logicadoprograma_8h"/>
      </node>
      <node id="1">
        <label>projeto/Listas.h</label>
        <link refid="Listas_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structsLista" prot="public">sLista</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="Listas_8h_1a367401cda9d2a86390b928c590da8141" prot="public" static="no">
        <type>struct <ref refid="structsLista" kindref="compound">sLista</ref></type>
        <definition>typedef struct sLista Nodo</definition>
        <argsstring></argsstring>
        <name>Nodo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>========================================MODULO DAS LISTAS LIGADAS================================================== </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="16" column="6"/>
      </memberdef>
      <memberdef kind="typedef" id="Listas_8h_1ad9e16fd54d7872da6c1ed365ac11d193" prot="public" static="no">
        <type>struct <ref refid="structsLista" kindref="compound">sLista</ref> *</type>
        <definition>typedef struct sLista  * LISTA</definition>
        <argsstring></argsstring>
        <name>LISTA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="16" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Listas_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
        <definition>LISTA criar_lista</definition>
        <argsstring>()</argsstring>
        <name>criar_lista</name>
        <briefdescription>
<para>Função que insere um valor na cabeça da lista. </para>
        </briefdescription>
        <detaileddescription>
<para>========================================MODULO DAS LISTAS LIGADAS================================================== Cria uma lista vazia </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="21" column="7" bodyfile="projeto/Listas.c" bodystart="9" bodyend="13" declfile="projeto/Listas.h" declline="21" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="Listas_8h_1a37ba5fc3cfddb6bc94d4b54b00bc696e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
        <definition>LISTA insere_cabeca</definition>
        <argsstring>(LISTA L, void *valor)</argsstring>
        <name>insere_cabeca</name>
        <param>
          <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>valor</declname>
        </param>
        <briefdescription>
<para>Função que insere um valor na cabeça da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>A lista </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valor</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para uma variável genérica</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Insere um valor na cabeça da lista. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="28" column="7" bodyfile="projeto/Listas.c" bodystart="16" bodyend="22" declfile="projeto/Listas.h" declline="28" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="Listas_8h_1abfcb205f3eb670157be0d1221021714b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* devolve_cabeca</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>devolve_cabeca</name>
        <param>
          <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Função que devolve a cabeça da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>A lista</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Devolve a cabeça da lista. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="34" column="6" bodyfile="projeto/Listas.c" bodystart="25" bodyend="27" declfile="projeto/Listas.h" declline="34" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="Listas_8h_1ad9380152361127432c55c1c6067e05ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
        <definition>LISTA proximo</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>proximo</name>
        <param>
          <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Função que devolve a cauda da lista. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>A lista</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Devolve a cauda da lista. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="40" column="7" bodyfile="projeto/Listas.c" bodystart="30" bodyend="32" declfile="projeto/Listas.h" declline="40" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="Listas_8h_1a9026a681a68322b5ec7f07137b864cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
        <definition>LISTA remove_cabeca</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>remove_cabeca</name>
        <param>
          <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Função que remove a cabeça da lista (libertando o espaço ocupado) e devolve a cauda. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>A lista</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Remove a cabeça da lista (libertando o espaço ocupado) e devolve a cauda. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="46" column="7" bodyfile="projeto/Listas.c" bodystart="35" bodyend="40" declfile="projeto/Listas.h" declline="46" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="Listas_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lista_esta_vazia</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>lista_esta_vazia</name>
        <param>
          <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Função que devolve verdadeiro se a lista é vazia. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>A lista</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Devolve verdareiro se a lista é vazia. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="52" column="5" bodyfile="projeto/Listas.c" bodystart="43" bodyend="47" declfile="projeto/Listas.h" declline="52" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="Listas_8h_1a13d79a0926a30e7796576a461f262f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int length_lista</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>length_lista</name>
        <param>
          <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Função que devolve verdadeiro se a lista é vazia. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>A lista</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Indica o comprimento de uma lista. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="58" column="5" bodyfile="projeto/Listas.c" bodystart="50" bodyend="55" declfile="projeto/Listas.h" declline="58" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="Listas_8h_1a0adcd982afe5a2e23427e53213bab59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsLista" kindref="compound">LISTA</ref></type>
        <definition>LISTA armazena_branca</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>armazena_branca</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que cria a lista de casas vazia á volta da peça branca. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A Coordenada</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Função que cria a lista de casas vazia á volta da beça branca </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/Listas.h" line="65" column="7" bodyfile="projeto/Listas.c" bodystart="58" bodyend="108" declfile="projeto/Listas.h" declline="65" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Definição das estratégias da heurísticas. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LI2PL7G05_LISTAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LI2PL7G05_LISTAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Dados_8h" kindref="compound">Dados.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structsLista" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsLista" kindref="compound">sLista</ref>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*variavel;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsLista" kindref="compound">sLista</ref><sp/>*prox;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}<sp/><ref refid="Listas_8h_1a367401cda9d2a86390b928c590da8141" kindref="member">Nodo</ref>,<sp/><sp/>*<ref refid="structsLista" kindref="compound">LISTA</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="structsLista" kindref="compound">LISTA</ref><sp/><ref refid="Listas_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="structsLista" kindref="compound">LISTA</ref><sp/><ref refid="Listas_8h_1a37ba5fc3cfddb6bc94d4b54b00bc696e" kindref="member">insere_cabeca</ref>(<ref refid="structsLista" kindref="compound">LISTA</ref><sp/>L,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*valor);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="Listas_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(<ref refid="structsLista" kindref="compound">LISTA</ref><sp/>L);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="structsLista" kindref="compound">LISTA</ref><sp/><ref refid="Listas_8h_1ad9380152361127432c55c1c6067e05ae" kindref="member">proximo</ref>(<ref refid="structsLista" kindref="compound">LISTA</ref><sp/>L);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="structsLista" kindref="compound">LISTA</ref><sp/><ref refid="Listas_8h_1a9026a681a68322b5ec7f07137b864cbd" kindref="member">remove_cabeca</ref>(<ref refid="structsLista" kindref="compound">LISTA</ref><sp/>L);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="Listas_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" kindref="member">lista_esta_vazia</ref>(<ref refid="structsLista" kindref="compound">LISTA</ref><sp/>L);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="Listas_8h_1a13d79a0926a30e7796576a461f262f04" kindref="member">length_lista</ref>(<ref refid="structsLista" kindref="compound">LISTA</ref><sp/>L);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="structsLista" kindref="compound">LISTA</ref><sp/><ref refid="Listas_8h_1a0adcd982afe5a2e23427e53213bab59c" kindref="member">armazena_branca</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//LI2PL7G05_LISTAS_H</highlight></codeline>
    </programlisting>
    <location file="projeto/Listas.h"/>
  </compounddef>
</doxygen>
